# Simon Sepiol-Duchemin, Joshua Setia

import matplotlib.pyplot as plt
import numpy as np

# Données
cores = np.array([2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
                  6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9,
                  10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 30, 30, 30, 30, 30,
                  40, 40, 40, 40, 40, 50, 50, 50, 50, 50, 60, 60, 60, 60, 60,
                  70, 70, 70, 70, 70, 80, 80, 80, 80, 80, 90, 90, 90, 90, 90,
                  100, 100, 100, 100, 100, 110, 110, 110, 110, 110, 120, 120,
                  120, 120, 120, 130, 130, 130, 130, 130, 140, 140, 140, 140, 140, 150, 150, 150, 150, 150])

# Nouveaux tableaux
temps_execution = np.array([
    266130038, 265990744, 266111262, 266171433, 266059446,
    176711834, 176483766, 176699818, 176537089, 176441435,
    131918076, 131937974, 131900619, 132064982, 131905491,
    107282510, 107289231, 106748122, 107371938, 107284046,
    89001932, 88948262, 89012843, 89072098, 88970396,
    77706314, 77573868, 77563819, 77518576, 77824612,
    67561042, 67570468, 67558835, 67548152, 67549785,
    61315144, 61502138, 61254434, 61294819, 61274939,
    55099066, 55136313, 55115069, 55088962, 55147445,
    37866973, 37753955, 37794261, 37796749, 37794043,
    33415283, 33439731, 33548067, 33040101, 33638360,
    29278188, 29343082, 29055118, 28797429, 30262969,
    25011918, 25069795, 24903016, 25108909, 25003525,
    28507396, 28434346, 28977304, 30145548, 29466576,
    29637894, 29937713, 29186037, 28748518, 29103750,
    34806484, 34939417, 33613188, 31503310, 32023539,
    32336933, 30912948, 29286862, 28817796, 28850498,
    24568212, 25147363, 24305670, 25375170, 25254004,
    24476681, 25136324, 25197349, 23690715, 23752583,
    21172450, 22949862, 22712842, 23763465, 23040801,
    22489088, 21533532, 23232188, 22786889, 20855107,
    25102953, 24760638, 24036776, 25974549, 25657670,
    23406537, 24486258, 24252594, 22223949, 27095011
])

memoire_max = np.array([
    16745696, 16745672, 16745708, 16745748, 16745536,
    11175972, 11175812, 11174052, 11173944, 11173968,
    8394052, 8392212, 8392140, 8392144, 8392164,
    6724312, 6724400, 6726324, 6724392, 6726332,
    4542476, 4542556, 4544416, 4544540, 4542528,
    3899648, 3901640, 3901456, 3901348, 3901676,
    3025176, 3025040, 3024988, 3024904, 3025052,
    2696528, 2696536, 2696576, 2698224, 2698632,
    2242856, 2242980, 2243096, 2243208, 2241076,
    942828, 942528, 942540, 942864, 942796,
    586540, 589472, 586648, 587588, 589432,
    428848, 428936, 429016, 428552, 430064,
    347880, 348868, 347768, 347860, 347764,
    296168, 294040, 297620, 297936, 298032,
    259444, 260892, 264596, 261032, 260560,
    229240, 230736, 229356, 229480, 229324,
    206752, 206704, 207072, 206932, 207036,
    195140, 196796, 195296, 196660, 194940,
    183140, 182784, 184040, 183376, 182940,
    170520, 170368, 170716, 170820, 170536,
    161856, 169520, 162384, 164572, 163716,
    162704, 161344, 164840, 153692, 153640,
    145928, 145848, 146132, 145908, 146416
])

# Calcul des valeurs moyennes
unique_cores = np.unique(cores)
mean_execution = np.array([np.mean(temps_execution[cores == n]) for n in unique_cores])
mean_memory = np.array([np.mean(memoire_max[cores == n]) for n in unique_cores])

T1 = mean_execution[0]  # Temps pour n=2
speedup = T1 / mean_execution


# Temps moyen d'exécution
plt.figure(figsize=(12, 6))
plt.plot(unique_cores, mean_execution, marker='o', linestyle='-', color='b', label="Moyenne du temps d'exécution")
plt.xlabel('Nombre de processus')
plt.ylabel('Temps moyen d\'exécution (x10⁸ ns)')
plt.title('Temps moyen d\'exécution vs Nombre de processus (input size=30)')
plt.legend()
plt.grid()

# Speedup
plt.figure(figsize=(12, 6))
plt.plot(unique_cores, speedup, marker='s', linestyle='--', color='r', label="Speedup")
plt.xlabel('Nombre de processus')
plt.ylabel('Accélération (T1 / Tn)')
plt.title('Accélération vs Nombre de processus (input size=30)')
plt.legend()
plt.grid()

# Mémoire maximale
plt.figure(figsize=(12, 6))
plt.plot(unique_cores, mean_memory, marker='^', linestyle='-', color='g', label="Mémoire maximale")
plt.xlabel('Nombre de processus')
plt.ylabel('Mémoire maximale (x10⁷ octets)')
plt.title('Mémoire maximale vs Nombre de processus (input size=30)')
plt.legend()
plt.grid()

plt.tight_layout()
plt.savefig("nouveaux_graphiques.png")
plt.show()